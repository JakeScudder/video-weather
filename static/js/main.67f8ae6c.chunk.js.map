{"version":3,"sources":["logo.svg","components/Header.js","components/Social.js","components/Weather.js","config.js","ocean.mp4","components/Showcase.js","components/Menu.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","class","Social","cityData","require","Weather","city","state","search","useState","setLoading","locationCode","setLocationCode","currentTemp","setCurrentTemp","feelsLike","setFeelsLike","setConditions","localCity","setLocalCity","setResults","useEffect","findCityCode","handleWeatherFetch","console","log","i","length","name","code","id","roundTemp","temp","formattedTemp","Math","round","trunc","axios","get","then","res","conditions","data","weather","description","curTemp","main","feelLike","feels_like","catch","error","Card","Img","variant","src","logo","Body","Title","Text","Showcase","history","setCity","setState","setSearch","muted","loop","autoPlay","ocean","type","Col","Row","Form","onSubmit","e","preventDefault","push","setTimeout","inline","Label","Control","onChange","target","value","placeholder","style","width","Button","Menu","href","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mok/oBAAe,G,MAAA,IAA0B,kC,sECa1BA,EAXA,WACb,OACE,sBAAKC,UAAU,SAAf,UACE,oBAAIC,MAAM,OAAV,6BACA,qBAAKA,MAAM,SAAX,SACE,mBAAGA,MAAM,sBCcFC,EAnBA,WACb,OACE,qBAAKF,UAAU,mBAAf,SACE,qBAAIC,MAAM,SAAV,UACE,6BACE,4BACE,mBAAGA,MAAM,yBAGb,6BACE,4BACE,mBAAGA,MAAM,4B,yBCJfE,EAAWC,EAAQ,IA+EVC,EA7EC,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAAa,EACbC,oBAAS,GADI,mBAC3BC,GAD2B,aAEHD,mBAAS,SAFN,mBAEpCE,EAFoC,KAEtBC,EAFsB,OAGLH,mBAAS,GAHJ,mBAGpCI,EAHoC,KAGvBC,EAHuB,OAITL,mBAAS,GAJA,mBAIpCM,EAJoC,KAIzBC,EAJyB,OAKPP,mBAAS,IALF,mBAKxBQ,GALwB,aAMTR,mBAAS,OANA,mBAMpCS,EANoC,KAMzBC,EANyB,OAObV,mBAAS,IAPI,mBAO3BW,GAP2B,WAS3CC,qBAAU,WACJf,GAAQC,IACVe,EAAahB,EAAMC,GACnBgB,EAAmBZ,IAGjBL,GAAQE,GACVe,EAAmBZ,KAEpB,CAACL,EAAMC,EAAOC,IAGjB,IAAMc,EAAe,SAAChB,EAAMC,GAC1BiB,QAAQC,IAAInB,EAAMC,GAClB,IAAK,IAAImB,EAAI,EAAGA,EAAIvB,EAASwB,OAAQD,IACnC,GAAIpB,IAASH,EAASuB,GAAGE,MAAQrB,IAAUJ,EAASuB,GAAGnB,MAAO,CAC5D,IAAIsB,EAAO1B,EAASuB,GAAGI,GACvBN,QAAQC,IAAI,aAActB,EAASuB,GAAGI,IACtClB,EAAgBiB,GAChBV,EAAab,KAKbyB,EAAY,SAACC,GACjB,IAAIC,EAAgBC,KAAKC,MAAMH,GAE/B,OADAC,EAAgBC,KAAKE,MAAMH,IAKvBV,EAAqB,SAACM,GAC1BnB,GAAW,GACX2B,IACGC,IADH,6DAE0DT,EAF1D,iCCrDW,qCDyDRU,MAAK,SAACC,GACLhB,QAAQC,IAAIe,GACZ,IAAIC,EAAaD,EAAIE,KAAKC,QAAQ,GAAGC,YACjCC,EAAUd,EAAUS,EAAIE,KAAKI,KAAKd,MAClCe,EAAWhB,EAAUS,EAAIE,KAAKI,KAAKE,YAEvClC,EAAe+B,GACf7B,EAAa+B,GACb3B,EAAWoB,EAAIE,MACfzB,EAAcwB,GACd/B,GAAW,MAEZuC,OAAM,SAACC,GACN1B,QAAQC,IAAI,mCAAoCyB,OAItD,OACE,mCACE,eAACC,EAAA,EAAD,CAAMnD,UAAU,eAAhB,UACE,cAACmD,EAAA,EAAKC,IAAN,CAAUC,QAAQ,MAAMC,IAAKC,IAC7B,eAACJ,EAAA,EAAKK,KAAN,WACE,eAACL,EAAA,EAAKM,MAAN,gCAA+BvC,EAA/B,OACA,eAACiC,EAAA,EAAKO,KAAN,mCAAiC7C,EAAjC,UACA,eAACsC,EAAA,EAAKO,KAAN,0BAAwB3C,EAAxB,mBEjFK,MAA0B,kCCsF1B4C,EA9EE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACRnD,mBAAS,mBADD,mBACzBH,EADyB,KACnBuD,EADmB,OAENpD,mBAAS,MAFH,mBAEzBF,EAFyB,KAElBuD,EAFkB,OAGJrD,oBAAS,GAHL,mBAGzBD,EAHyB,KAGjBuD,EAHiB,KAchC,OACE,sBAAK/D,UAAU,WAAf,UACE,cAAC,EAAD,IACA,uBAAOC,MAAM,QAAQ+D,OAAK,EAACC,MAAI,EAACC,UAAQ,EAAxC,SACE,wBAAQZ,IAAKa,EAAOC,KAAK,gBAE3B,qBAAKnE,MAAM,YAEX,eAACoE,EAAA,EAAD,CAAKrE,UAAU,sBAAf,UACE,cAACsE,EAAA,EAAD,CAAKtE,UAAU,mBAAf,SACE,sBAAKC,MAAM,OAAX,UACE,qBAAKD,UAAU,kBAAf,SACE,kEAGF,qBAAKC,MAAM,WAAX,SACE,cAACsE,EAAA,EAAD,CAAMC,SAzBI,SAACC,GACrBA,EAAEC,iBACFX,GAAU,GACVH,EAAQe,KAAR,kBAAwBrE,EAAxB,YAAgCC,IAChCqE,YAAW,WACTb,GAAU,KACT,MAmBsCc,QAAM,EAArC,SACE,eAACR,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,eAACD,EAAA,EAAD,WACE,cAACE,EAAA,EAAKO,MAAN,mBACA,cAACP,EAAA,EAAKQ,QAAN,CACEX,KAAK,OACLxC,KAAK,OACLoD,SAAU,SAACP,GAAD,OAAOZ,EAAQY,EAAEQ,OAAOC,QAClCC,YAAY,SACZnF,UAAU,kBAEd,eAACqE,EAAA,EAAD,WACE,cAACE,EAAA,EAAKO,MAAN,CAAY9E,UAAU,OAAtB,mBACA,cAACuE,EAAA,EAAKQ,QAAN,CACEX,KAAK,OACLxC,KAAK,QACLoD,SAAU,SAACP,GAAD,OAAOX,EAASW,EAAEQ,OAAOC,QACnCC,YAAY,KACZnF,UAAU,0BAGhB,eAACsE,EAAA,EAAD,CAAKtE,UAAU,gBAAf,UACE,cAACqE,EAAA,EAAD,CAAKe,MAAO,CAAEC,MAAO,SAArB,SACE,cAAC,EAAD,MAEF,cAAChB,EAAA,EAAD,UACE,cAACiB,EAAA,EAAD,CACElB,KAAK,SACLf,QAAQ,kBACRrD,UAAU,oBAHZ,qCAad,cAACsE,EAAA,EAAD,CAAKtE,UAAU,UAAf,SACE,cAAC,EAAD,CAASM,KAAMA,EAAMC,MAAOA,EAAOC,OAAQA,aC3DtC+E,EAlBF,WACX,OACE,qBAAKvF,UAAU,OAAf,SACE,+BACE,6BACE,mBAAGwF,KAAK,IAAR,oBAEF,6BACE,mBAAGA,KAAK,IAAR,qBAEF,6BACE,mBAAGA,KAAK,IAAR,gCCKKC,EAXH,WACV,OACE,cAAC,IAAD,UACE,sBAAKzF,UAAU,MAAf,UACE,cAAC,IAAD,CAAO0F,KAAK,IAAIC,UAAWhC,IAC3B,cAAC,EAAD,UCAOiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvD,MAAK,YAAkD,IAA/CwD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.67f8ae6c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <h2 class=\"logo\">BlueJay Weather</h2>\n      <div class=\"toggle\">\n        <i class=\"fas fa-bars\"></i>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Social = () => {\n  return (\n    <div className=\"social-container\">\n      <ul class=\"social\">\n        <li>\n          <a>\n            <i class=\"fab fa-instagram\"></i>\n          </a>\n        </li>\n        <li>\n          <a>\n            <i class=\"fab fa-github\"></i>\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Social;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Card } from \"react-bootstrap\";\nimport logo from \"../logo.svg\";\n\n// Fetch\nimport apiKey from \"../config\";\n\n// List of all cities with specific codes\nconst cityData = require(\"../city.list.json\");\n\nconst Weather = ({ city, state, search }) => {\n  const [loading, setLoading] = useState(false);\n  const [locationCode, setLocationCode] = useState(4752031);\n  const [currentTemp, setCurrentTemp] = useState(0);\n  const [feelsLike, setFeelsLike] = useState(0);\n  const [conditions, setConditions] = useState(\"\");\n  const [localCity, setLocalCity] = useState(\"...\");\n  const [results, setResults] = useState([]);\n\n  useEffect(() => {\n    if (city && state) {\n      findCityCode(city, state);\n      handleWeatherFetch(locationCode);\n    }\n\n    if (city && search) {\n      handleWeatherFetch(locationCode);\n    }\n  }, [city, state, search]);\n\n  //Runs fetch api with the city code to get precise weather\n  const findCityCode = (city, state) => {\n    console.log(city, state);\n    for (let i = 0; i < cityData.length; i++) {\n      if (city === cityData[i].name && state === cityData[i].state) {\n        let code = cityData[i].id;\n        console.log(\"city-code:\", cityData[i].id);\n        setLocationCode(code);\n        setLocalCity(city);\n      }\n    }\n  };\n\n  const roundTemp = (temp) => {\n    let formattedTemp = Math.round(temp);\n    formattedTemp = Math.trunc(formattedTemp);\n    return formattedTemp;\n  };\n\n  // Weather API call\n  const handleWeatherFetch = (code) => {\n    setLoading(true);\n    axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/weather?id=${code}&units=imperial&APPID=${apiKey}`\n      )\n      .then((res) => {\n        console.log(res);\n        let conditions = res.data.weather[0].description;\n        let curTemp = roundTemp(res.data.main.temp);\n        let feelLike = roundTemp(res.data.main.feels_like);\n\n        setCurrentTemp(curTemp);\n        setFeelsLike(feelLike);\n        setResults(res.data);\n        setConditions(conditions);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.log(\"Error fetching the weather data:\", error);\n      });\n  };\n\n  return (\n    <>\n      <Card className=\"weather-card\">\n        <Card.Img variant=\"top\" src={logo} />\n        <Card.Body>\n          <Card.Title>Todays weather in {localCity} </Card.Title>\n          <Card.Text>Current Temperature: {currentTemp}°</Card.Text>\n          <Card.Text>Feels Like: {feelsLike}°</Card.Text>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default Weather;\n","const apiKey = 'd77262e5a1d388bebb698bab17c0b153';\nexport default apiKey;","export default __webpack_public_path__ + \"static/media/ocean.9ca6c4c5.mp4\";","import React, { useState } from \"react\";\nimport { Col, Row, Button, Form } from \"react-bootstrap\";\n\nimport Header from \"./Header\";\nimport Social from \"./Social\";\nimport Weather from \"./Weather\";\nimport ocean from \"../ocean.mp4\";\n\nconst Showcase = ({ history }) => {\n  const [city, setCity] = useState(\"Charlottesville\");\n  const [state, setState] = useState(\"VA\");\n  const [search, setSearch] = useState(false);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    setSearch(true);\n    history.push(`/search/${city}-${state}`);\n    setTimeout(() => {\n      setSearch(false);\n    }, 3000);\n  };\n\n  return (\n    <div className=\"showcase\">\n      <Header />\n      <video class=\"video\" muted loop autoPlay>\n        <source src={ocean} type=\"video/mp4\" />\n      </video>\n      <div class=\"overlay\"></div>\n\n      <Col className=\"search-forecast-div\">\n        <Row className=\"search-container\">\n          <div class=\"text\">\n            <div className=\"greeting-h2-div\">\n              <h2>What's the weather like today?</h2>\n            </div>\n\n            <div class=\"form-div\">\n              <Form onSubmit={submitHandler} inline>\n                <Col>\n                  <Row>\n                    <Col>\n                      <Form.Label>City</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"city\"\n                        onChange={(e) => setCity(e.target.value)}\n                        placeholder=\"Denver\"\n                        className=\"city-input\"></Form.Control>\n                    </Col>\n                    <Col>\n                      <Form.Label className=\"mr-2\">State</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"state\"\n                        onChange={(e) => setState(e.target.value)}\n                        placeholder=\"CO\"\n                        className=\"mr-sm-2 ml-sm-5\"></Form.Control>\n                    </Col>\n                  </Row>\n                  <Row className=\"social-submit\">\n                    <Col style={{ width: \"100px\" }}>\n                      <Social />\n                    </Col>\n                    <Col>\n                      <Button\n                        type=\"submit\"\n                        variant=\"outline-success\"\n                        className=\"submit-button p-2\">\n                        Search\n                      </Button>\n                    </Col>\n                  </Row>\n                </Col>\n              </Form>\n            </div>\n          </div>\n        </Row>\n        <Row className=\"weather\">\n          <Weather city={city} state={state} search={search} />\n        </Row>\n      </Col>\n    </div>\n  );\n};\n\nexport default Showcase;\n","import React from \"react\";\n\nconst Menu = () => {\n  return (\n    <div className=\"menu\">\n      <ul>\n        <li>\n          <a href=\"#\">Home</a>\n        </li>\n        <li>\n          <a href=\"#\">About</a>\n        </li>\n        <li>\n          <a href=\"#\">Other Apps</a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Menu;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Showcase from \"./components/Showcase\";\nimport Menu from \"./components/Menu\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Route path=\"/\" component={Showcase} />\n        <Menu />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}